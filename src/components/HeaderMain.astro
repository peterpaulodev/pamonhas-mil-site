---
import logo from "../assets/theme-images/hero-logo.png"

const { settings } = Astro.props
---

<header class="wrapper bg-loop font-semibold">
  <!-- Wrapper -->
  <div class="bs-container py-6 flex flex-col md:flex-row justify-between items-start md:items-center">
    <!-- Logo e botão hambúrguer em linha em telas móveis -->
    <div class="w-full md:w-auto flex justify-between items-center">
      <a class="flex xl:min-w-32 group" href="/" aria-label={ settings.title + ' - Home' }>
        <img src={ logo.src } alt="Empresa Pamonhas Mil logo" loading="lazy" height="100" width="100" />
      </a>

      <!-- Botão do menu móvel - visível apenas em telas pequenas -->
      <button
        id="mobile-menu-button"
        type="button"
        class="md:hidden p-2 text-bs-primary hover:bg-bs-surface-2 rounded-lg relative w-10 h-10 flex items-center justify-center"
        aria-expanded="false"
        aria-controls="mobile-menu"
      >
        <span class="sr-only">Abrir menu principal</span>
        <div class="relative w-6 h-6">
          <!-- Ícone do menu (hambúrguer) -->
          <svg
            id="menu-icon"
            class="absolute inset-0 w-full h-full transition-opacity duration-300"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            style="opacity: 1;"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"
            />
          </svg>

          <!-- Ícone de fechar (X) -->
          <svg
            id="close-icon"
            class="absolute inset-0 w-full h-full transition-opacity duration-300"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            style="opacity: 0;"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"
            />
          </svg>
        </div>
      </button>
    </div>

    <!-- Navegação principal - visível em telas médias/grandes -->
    <nav class="hidden md:flex items-center gap-6">
      { settings.nav.map( item =>

        <a class="bs-btn !bg-transparent before:translate-y-full hover:before:translate-y-0" href={item.link}>
          { item.title }
        </a>
      )}
    </nav>

    <!-- CTA - visível em telas médias/grandes -->
    <div class="hidden md:block">
      <a
        href="https://www.instagram.com/pamonhasmil/"
        target="_blank"
        rel="noopener noreferrer"
        class="bs-btn !bg-transparent before:translate-y-full hover:before:translate-y-0 flex items-center gap-2 group"
      >
        <svg class="w-5 h-5 text-bs-primary group-hover:text-bs-accent transition-colors duration-200" viewBox="0 0 24 24" fill="currentColor">
          <defs>
            <linearGradient id="instagram-gradient" x1="0%" y1="100%" x2="100%" y2="0%">
              <stop offset="0%" stop-color="#fdf497" />
              <stop offset="5%" stop-color="#fdf497" />
              <stop offset="45%" stop-color="#fd5949" />
              <stop offset="60%" stop-color="#d6249f" />
              <stop offset="90%" stop-color="#285AEB" />
            </linearGradient>
          </defs>
          <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zM12 0C8.741 0 8.333.014 7.053.072 2.695.272.273 2.69.073 7.052.014 8.333 0 8.741 0 12c0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98C8.333 23.986 8.741 24 12 24c3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98C15.668.014 15.259 0 12.001 0z" fill="url(#instagram-gradient)" />
          <path d="M12 5.838a6.162 6.162 0 100 12.324 6.162 6.162 0 000-12.324zM12 16a4 4 0 110-8 4 4 0 010 8z" fill="url(#instagram-gradient)" />
          <circle cx="18.406" cy="5.594" r="1.44" fill="url(#instagram-gradient)" />
        </svg>
        <span class="hidden sm:inline">Instagram</span>
      </a>
    </div>

    <!-- Menu móvel - oculto por padrão -->
    <div id="mobile-menu" class="hidden w-full md:hidden mt-4 bg-bs-surface-1/95 backdrop-blur-sm rounded-xl shadow-xl border border-bs-surface-2">
      <nav class="flex flex-col p-2 space-y-1" aria-label="Menu móvel">
        {settings.nav.map((item) => (
          <a
            href={item.link}
            class="block py-3 px-5 text-bs-foreground hover:bg-bs-surface-2 rounded-lg transition-colors duration-200 font-medium text-sm uppercase tracking-wider hover:pl-6 hover:text-bs-primary focus:outline-none focus:ring-2 focus:ring-bs-accent focus:ring-opacity-50 focus:bg-bs-surface-2"
            aria-current={Astro.url.pathname === item.link ? 'page' : undefined}
          >
            {item.title}
          </a>
        ))}
        <div class="pt-2 mt-1 border-t border-bs-surface-2">
          <a
            href="https://www.instagram.com/pamonhasmil/"
            target="_blank"
            rel="noopener noreferrer"
            class="w-full py-3 px-4 bg-bs-accent text-white hover:bg-bs-accent/90 rounded-lg transition-all duration-300 font-medium text-sm uppercase tracking-wider focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-bs-accent focus:ring-offset-bs-surface-1 flex items-center justify-center gap-2"
          >
            <svg class="w-5 h-5" viewBox="0 0 24 24" aria-hidden="true">
              <defs>
                <linearGradient id="instagram-gradient-mobile" x1="0%" y1="100%" x2="100%" y2="0%">
                  <stop offset="0%" stop-color="#fdf497" />
                  <stop offset="5%" stop-color="#fdf497" />
                  <stop offset="45%" stop-color="#fd5949" />
                  <stop offset="60%" stop-color="#d6249f" />
                  <stop offset="90%" stop-color="#285AEB" />
                </linearGradient>
              </defs>
              <path fill="url(#instagram-gradient-mobile)" d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zM12 0C8.741 0 8.333.014 7.053.072 2.695.272.273 2.69.073 7.052.014 8.333 0 8.741 0 12c0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98C8.333 23.986 8.741 24 12 24c3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98C15.668.014 15.259 0 12.001 0zm0 5.838a6.162 6.162 0 100 12.324 6.162 6.162 0 000-12.324zM12 16a4 4 0 110-8 4 4 0 010 8zm6.406-11.845a1.44 1.44 0 100 2.881 1.44 1.44 0 000-2.881z"/>
            <span>Instagram</span>
          </a>
      </div>
  </div>

  <style is:global>
    /* Animações para o menu móvel */
    #mobile-menu {
      max-height: 0;
      opacity: 0;
      overflow: hidden;
      transition: max-height 0.4s ease-in-out, opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
      transform: translateY(-10px);
    }

    #mobile-menu[aria-hidden="false"] {
      max-height: 500px; /* Ajuste conforme necessário */
      opacity: 1;
      transform: translateY(0);
    }

    /* Animações para o ícone do menu */
    #menu-icon, #close-icon {
      transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
    }

    #menu-icon[aria-hidden="true"],
    #close-icon[aria-hidden="true"] {
      display: none;
      opacity: 0;
      transform: rotate(-90deg) scale(0.8);
    }

    #menu-icon[aria-hidden="false"],
    #close-icon[aria-hidden="false"] {
      display: block;
      opacity: 1;
      transform: rotate(0) scale(1);
    }
  </style>

  <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      const menuButton = document.getElementById('mobile-menu-button');
      const mobileMenu = document.getElementById('mobile-menu');
      const menuIcon = document.getElementById('menu-icon');
      const closeIcon = document.getElementById('close-icon');
      const menuIconPath = menuIcon?.querySelector('path');
      const closeIconPath = closeIcon?.querySelector('path');

      function toggleMenuIcons(isExpanded) {
        if (isExpanded) {
          menuIcon.style.opacity = '0';
          closeIcon.style.opacity = '1';
        } else {
          menuIcon.style.opacity = '1';
          closeIcon.style.opacity = '0';
        }
      }

      if (menuButton && mobileMenu) {
        // Inicializa o estado
        mobileMenu.setAttribute('aria-hidden', 'true');
        toggleMenuIcons(false);

        menuButton.addEventListener('click', () => {
          const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';
          const newState = !isExpanded;

          // Atualiza o estado do botão
          menuButton.setAttribute('aria-expanded', newState);

          // Anima o menu
          if (newState) {
            mobileMenu.classList.remove('hidden');
            // Pequeno atraso para garantir que o display: none foi removido
            setTimeout(() => {
              mobileMenu.setAttribute('aria-hidden', 'false');
            }, 10);
          } else {
            mobileMenu.setAttribute('aria-hidden', 'true');
            // Espera a animação terminar antes de esconder o menu
            setTimeout(() => {
              mobileMenu.classList.add('hidden');
            }, 300);
          }

          // Anima os ícones
          toggleMenuIcons(newState);

          // Desabilita o scroll da página quando o menu está aberto
          document.body.style.overflow = newState ? 'hidden' : '';
        });

        // Fecha o menu ao clicar em um link
        const menuLinks = mobileMenu.querySelectorAll('a[href^="#"], a[href^="/"]');
        menuLinks.forEach(link => {
          link.addEventListener('click', () => {
            menuButton.setAttribute('aria-expanded', 'false');
            mobileMenu.setAttribute('aria-hidden', 'true');
            setTimeout(() => mobileMenu.classList.add('hidden'), 300);
            toggleMenuIcons(false);
            document.body.style.overflow = '';
          });
        });
      }
    });
  </script>
</header>